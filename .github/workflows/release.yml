# Name of workflow
name: Release

# trigger
on:
  push:
    tags:
      - "v.*"

# jobs
jobs:
  build-linux-packages:
    name: "Release"
    runs-on: "ubuntu-latest"
    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18.0-rc.1' # The Go version to download (if necessary) and use.
      - run: go version
      - name: Create debs
        run: |
          make debs
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux-packages
    name: Create Release
      id: create-release
      steps:
        - uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ env.RELEASE_VERSION }}
            release_name: ${{ env.RELEASE_VERSION }}
            body: ${{ github.ref }}
            draft: false
            prerelease: false
        - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt
  upload-linux-packages:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package
          - pkg: rpm
            asset_content_type: application/x-rpm
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact-${{ matrix.pkg }}

      - uses: actions/download-artifact@v3
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *./installers/${{ matrix.pkg }} | head -n 1)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}